spring:
  shardingsphere:
    datasource:
      names: shardingmaster,shardingslave0,shardingslave1
      shardingmaster:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: org.h2.Driver
        jdbc-url: jdbc:h2:mem:master;INIT=RUNSCRIPT FROM 'classpath:db/schema.sql'
        username: sa
        password:
      shardingslave0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: org.h2.Driver
        jdbc-url: jdbc:h2:mem:slave1;INIT=RUNSCRIPT FROM 'classpath:db/schema.sql'
        username: sa
        password:
      shardingslave1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: org.h2.Driver
        jdbc-url: jdbc:h2:mem:slave2;INIT=RUNSCRIPT FROM 'classpath:db/schema.sql'
        username: sa
        password:
    rules:
      sharding:
        tables:
          t_order:
            actualDataNodes: shardingmaster.t_order$->{0..1}
            table-strategy:
              standard:
                sharding-column: order_id
                sharding-algorithm-name: baomidou_inline
            key-generate-strategy:
              column: order_id
              key-generator-name: baomidou_snowflake
        sharding-algorithms:
          baomidou_inline:
            type: INLINE
            props:
              algorithm-expression: t_order$->{order_id % 2}
              allow-range-query-with-inline-sharding: true
        key-generators:
          baomidou_snowflake:
            type: SNOWFLAKE
      readwrite-splitting:
        data-sources:
          baomidou_readwrite_data_sources:
            static-strategy:
              write-data-source-name: shardingmaster
              read-data-source-names: shardingslave0,shardingslave1
            load-balancer-name: baomidou_load_balance_algorithm
        load-balancers:
          baomidou_load_balance_algorithm:
            type: ROUND_ROBIN
    props:
      sql-show: true
  datasource:
    dynamic:
      datasource:
        master:
          username: sa
          password: ""
          url: jdbc:h2:mem:baomidou_master;INIT=RUNSCRIPT FROM 'classpath:db/schema.sql'
          driver-class-name: org.h2.Driver
        test:
          username: sa
          password: ""
          url: jdbc:h2:mem:baomidou_test;INIT=RUNSCRIPT FROM 'classpath:db/schema.sql'
          driver-class-name: org.h2.Driver
logging:
  level:
    com.baomidou: debug